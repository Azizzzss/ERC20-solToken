{
    "contractName": "OceanToken",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "cap",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "reward",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "blockReward",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cap",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "reward",
                    "type": "uint256"
                }
            ],
            "name": "setBlockReward",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/contracts/OceanToken.sol\":\"OceanToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/contracts/OceanToken.sol\":{\"keccak256\":\"0x3e8fe676a09b3132505f957925779a6366400c68ff50c60f877e411932b1ec68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2656a0c135ad1bbddb901fa25b6523454e4c3e604c08d91d3a13217483d47d80\",\"dweb:/ipfs/QmVpAmi2zmvuNTaSXd8KUMYjuP6HhSmWXQrbC9mxFcaQ1T\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
    "bytecode": "60a06040523480156200001157600080fd5b50604051620015353803806200153583398101604081905262000034916200039a565b620000426012600a620004d4565b6200004e9083620004ec565b604051806040016040528060098152602001684f6365616e546f6b6560b81b815250604051806040016040528060028152602001614f4360f01b81525081600390816200009c9190620005aa565b506004620000ab8282620005aa565b50505060008111620001045760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b608052600580546001600160a01b031916339081179091556200014d906200012a601290565b6200013790600a620004d4565b620001479063042c1d80620004ec565b62000173565b6200015b6012600a620004d4565b620001679082620004ec565b600655506200068c9050565b608051816200018160025490565b6200018d919062000676565b1115620001dd5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000fb565b620001e98282620001ed565b5050565b60805181620001fb60025490565b62000207919062000676565b1115620002575760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000fb565b620001e982826001600160a01b038216620002b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000fb565b620002c3600083836200032e565b8060026000828254620002d7919062000676565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038316158015906200035057506001600160a01b0382164114155b80156200035c57504115155b156200036c576200036c62000384565b6200037f8383836001600160e01b038416565b505050565b62000398416006546200017360201b60201c565b565b60008060408385031215620003ae57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000416578160001904821115620003fa57620003fa620003bf565b808516156200040857918102915b93841c9390800290620003da565b509250929050565b6000826200042f57506001620004ce565b816200043e57506000620004ce565b8160018114620004575760028114620004625762000482565b6001915050620004ce565b60ff841115620004765762000476620003bf565b50506001821b620004ce565b5060208310610133831016604e8410600b8410161715620004a7575081810a620004ce565b620004b38383620003d5565b8060001904821115620004ca57620004ca620003bf565b0290505b92915050565b6000620004e560ff8416836200041e565b9392505050565b8082028115828204841417620004ce57620004ce620003bf565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200053157607f821691505b6020821081036200055257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037f57600081815260208120601f850160051c81016020861015620005815750805b601f850160051c820191505b81811015620005a2578281556001016200058d565b505050505050565b81516001600160401b03811115620005c657620005c662000506565b620005de81620005d784546200051c565b8462000558565b602080601f831160018114620006165760008415620005fd5750858301515b600019600386901b1c1916600185901b178555620005a2565b600085815260208120601f198616915b82811015620006475788860151825594840194600190910190840162000626565b5085821015620006665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004ce57620004ce620003bf565b608051610e7f620006b6600039600081816101a9015281816109cd0152610a510152610e7f6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806339509351116100a25780638da5cb5b116100715780638da5cb5b1461022f57806395d89b411461025a578063a457c2d714610262578063a9059cbb14610275578063dd62ed3e1461028857600080fd5b806339509351146101cd57806342966c68146101e057806370a08231146101f357806379cc67901461021c57600080fd5b80631a18e707116100de5780631a18e7071461017057806323b872dd14610185578063313ce56714610198578063355274ea146101a757600080fd5b806306fdde0314610110578063095ea7b31461012e5780630ac168a11461015157806318160ddd14610168575b600080fd5b61011861029b565b6040516101259190610b9e565b60405180910390f35b61014161013c366004610c08565b61032d565b6040519015158152602001610125565b61015a60065481565b604051908152602001610125565b60025461015a565b61018361017e366004610c32565b610347565b005b610141610193366004610c4b565b6103cc565b60405160128152602001610125565b7f000000000000000000000000000000000000000000000000000000000000000061015a565b6101416101db366004610c08565b6103f0565b6101836101ee366004610c32565b610412565b61015a610201366004610c87565b6001600160a01b031660009081526020819052604090205490565b61018361022a366004610c08565b61041f565b600554610242906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b610118610438565b610141610270366004610c08565b610447565b610141610283366004610c08565b6104c2565b61015a610296366004610ca9565b6104d0565b6060600380546102aa90610cdc565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610cdc565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b5050505050905090565b60003361033b8185856104fb565b60019150505b92915050565b6005546001600160a01b031633146103b05760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084015b60405180910390fd5b6103bc6012600a610e10565b6103c69082610e1f565b60065550565b6000336103da858285610620565b6103e585858561069a565b506001949350505050565b60003361033b81858561040383836104d0565b61040d9190610e36565b6104fb565b61041c3382610849565b50565b61042a823383610620565b6104348282610849565b5050565b6060600480546102aa90610cdc565b6000338161045582866104d0565b9050838110156104b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a7565b6103e582868684036104fb565b60003361033b81858561069a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661055d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061062c84846104d0565b9050600019811461069457818110156106875760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a7565b61069484848484036104fb565b50505050565b6001600160a01b0383166106fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a7565b6001600160a01b0382166107605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a7565b61076b83838361097f565b6001600160a01b038316600090815260208190526040902054818110156107e35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610694565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103a7565b6108b58260008361097f565b6001600160a01b038216600090815260208190526040902054818110156109295760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103a7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610613565b6001600160a01b038316158015906109a057506001600160a01b0382164114155b80156109ab57504115155b156109b8576109b86109bd565b505050565b6109c9416006546109cb565b565b7f0000000000000000000000000000000000000000000000000000000000000000816109f660025490565b610a009190610e36565b1115610a4a5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016103a7565b61043482827f000000000000000000000000000000000000000000000000000000000000000081610a7a60025490565b610a849190610e36565b1115610ace5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016103a7565b61043482826001600160a01b038216610b295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a7565b610b356000838361097f565b8060026000828254610b479190610e36565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610bcb57858101830151858201604001528201610baf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c0357600080fd5b919050565b60008060408385031215610c1b57600080fd5b610c2483610bec565b946020939093013593505050565b600060208284031215610c4457600080fd5b5035919050565b600080600060608486031215610c6057600080fd5b610c6984610bec565b9250610c7760208501610bec565b9150604084013590509250925092565b600060208284031215610c9957600080fd5b610ca282610bec565b9392505050565b60008060408385031215610cbc57600080fd5b610cc583610bec565b9150610cd360208401610bec565b90509250929050565b600181811c90821680610cf057607f821691505b602082108103610d1057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d67578160001904821115610d4d57610d4d610d16565b80851615610d5a57918102915b93841c9390800290610d31565b509250929050565b600082610d7e57506001610341565b81610d8b57506000610341565b8160018114610da15760028114610dab57610dc7565b6001915050610341565b60ff841115610dbc57610dbc610d16565b50506001821b610341565b5060208310610133831016604e8410600b8410161715610dea575081810a610341565b610df48383610d2c565b8060001904821115610e0857610e08610d16565b029392505050565b6000610ca260ff841683610d6f565b808202811582820484141761034157610341610d16565b8082018082111561034157610341610d1656fea26469706673582212205b8739640737e826fcfc7b69b427267041ec438025ebe421a4eff061f912744f64736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806339509351116100a25780638da5cb5b116100715780638da5cb5b1461022f57806395d89b411461025a578063a457c2d714610262578063a9059cbb14610275578063dd62ed3e1461028857600080fd5b806339509351146101cd57806342966c68146101e057806370a08231146101f357806379cc67901461021c57600080fd5b80631a18e707116100de5780631a18e7071461017057806323b872dd14610185578063313ce56714610198578063355274ea146101a757600080fd5b806306fdde0314610110578063095ea7b31461012e5780630ac168a11461015157806318160ddd14610168575b600080fd5b61011861029b565b6040516101259190610b9e565b60405180910390f35b61014161013c366004610c08565b61032d565b6040519015158152602001610125565b61015a60065481565b604051908152602001610125565b60025461015a565b61018361017e366004610c32565b610347565b005b610141610193366004610c4b565b6103cc565b60405160128152602001610125565b7f000000000000000000000000000000000000000000000000000000000000000061015a565b6101416101db366004610c08565b6103f0565b6101836101ee366004610c32565b610412565b61015a610201366004610c87565b6001600160a01b031660009081526020819052604090205490565b61018361022a366004610c08565b61041f565b600554610242906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b610118610438565b610141610270366004610c08565b610447565b610141610283366004610c08565b6104c2565b61015a610296366004610ca9565b6104d0565b6060600380546102aa90610cdc565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610cdc565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b5050505050905090565b60003361033b8185856104fb565b60019150505b92915050565b6005546001600160a01b031633146103b05760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084015b60405180910390fd5b6103bc6012600a610e10565b6103c69082610e1f565b60065550565b6000336103da858285610620565b6103e585858561069a565b506001949350505050565b60003361033b81858561040383836104d0565b61040d9190610e36565b6104fb565b61041c3382610849565b50565b61042a823383610620565b6104348282610849565b5050565b6060600480546102aa90610cdc565b6000338161045582866104d0565b9050838110156104b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a7565b6103e582868684036104fb565b60003361033b81858561069a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661055d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061062c84846104d0565b9050600019811461069457818110156106875760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a7565b61069484848484036104fb565b50505050565b6001600160a01b0383166106fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a7565b6001600160a01b0382166107605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a7565b61076b83838361097f565b6001600160a01b038316600090815260208190526040902054818110156107e35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610694565b6001600160a01b0382166108a95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103a7565b6108b58260008361097f565b6001600160a01b038216600090815260208190526040902054818110156109295760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103a7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610613565b6001600160a01b038316158015906109a057506001600160a01b0382164114155b80156109ab57504115155b156109b8576109b86109bd565b505050565b6109c9416006546109cb565b565b7f0000000000000000000000000000000000000000000000000000000000000000816109f660025490565b610a009190610e36565b1115610a4a5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016103a7565b61043482827f000000000000000000000000000000000000000000000000000000000000000081610a7a60025490565b610a849190610e36565b1115610ace5760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b60448201526064016103a7565b61043482826001600160a01b038216610b295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a7565b610b356000838361097f565b8060026000828254610b479190610e36565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610bcb57858101830151858201604001528201610baf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c0357600080fd5b919050565b60008060408385031215610c1b57600080fd5b610c2483610bec565b946020939093013593505050565b600060208284031215610c4457600080fd5b5035919050565b600080600060608486031215610c6057600080fd5b610c6984610bec565b9250610c7760208501610bec565b9150604084013590509250925092565b600060208284031215610c9957600080fd5b610ca282610bec565b9392505050565b60008060408385031215610cbc57600080fd5b610cc583610bec565b9150610cd360208401610bec565b90509250929050565b600181811c90821680610cf057607f821691505b602082108103610d1057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d67578160001904821115610d4d57610d4d610d16565b80851615610d5a57918102915b93841c9390800290610d31565b509250929050565b600082610d7e57506001610341565b81610d8b57506000610341565b8160018114610da15760028114610dab57610dc7565b6001915050610341565b60ff841115610dbc57610dbc610d16565b50506001821b610341565b5060208310610133831016604e8410600b8410161715610dea575081810a610341565b610df48383610d2c565b8060001904821115610e0857610e08610d16565b029392505050565b6000610ca260ff841683610d6f565b808202811582820484141761034157610341610d16565b8082018082111561034157610341610d1656fea26469706673582212205b8739640737e826fcfc7b69b427267041ec438025ebe421a4eff061f912744f64736f6c63430008130033",
    "sourceMap": "354:1335:0:-:0;;;485:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:16;3186:2:1;571::0;:16;:::i;:::-;564:24;;:3;:24;:::i;:::-;1980:113:1;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;501:1:4;494:4;:8;486:42;;;;-1:-1:-1;;;486:42:4;;4875:2:8;486:42:4;;;4857:21:8;4914:2;4894:18;;;4887:30;4953:23;4933:18;;;4926:51;4994:18;;486:42:4;;;;;;;;;538:11;;600:5:0::2;:27:::0;;-1:-1:-1;;;;;;600:27:0::2;616:10;600:27:::0;;::::2;::::0;;;638:43:::2;::::0;669:10:::2;3186:2:1::0;;3104:91;669:10:0::2;663:16;::::0;:2:::2;:16;:::i;:::-;651:29;::::0;:8:::2;:29;:::i;:::-;638:5;:43::i;:::-;718:16;3186:2:1::0;718::0::2;:16;:::i;:::-;707:28;::::0;:6;:28:::2;:::i;:::-;693:11;:42:::0;-1:-1:-1;354:1335:0;;-1:-1:-1;354:1335:0;754:227;705:4:4;;889:6:0;867:19;3342:12:1;;;3255:106;867:19:0;:28;;;;:::i;:::-;:37;;859:75;;;;-1:-1:-1;;;859:75:0;;5355:2:8;859:75:0;;;5337:21:8;5394:2;5374:18;;;5367:30;5433:27;5413:18;;;5406:55;5478:18;;859:75:0;5153:349:8;859:75:0;945:28;957:7;966:6;945:11;:28::i;:::-;754:227;;:::o;769:204:4:-;705:4;;883:6;861:19;3342:12:1;;;3255:106;861:19:4;:28;;;;:::i;:::-;:37;;853:75;;;;-1:-1:-1;;;853:75:4;;5355:2:8;853:75:4;;;5337:21:8;5394:2;5374:18;;;5367:30;5433:27;5413:18;;;5406:55;5478:18;;853:75:4;5153:349:8;853:75:4;938:28;950:7;959:6;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;5709:2:8;8595:65:1;;;5691:21:8;5748:2;5728:18;;;5721:30;5787:33;5767:18;;;5760:61;5838:18;;8595:65:1;5507:355:8;8595:65:1;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;6013:25:8;;;8952:37:1;;5986:18:8;8952:37:1;;;;;;;754:227:0;;:::o;1090:317::-;-1:-1:-1;;;;;1210:18:0;;;;;;:42;;-1:-1:-1;;;;;;1232:20:0;;1238:14;1232:20;;1210:42;:74;;;;-1:-1:-1;1256:14:0;:28;;1210:74;1206:136;;;1308:18;:16;:18::i;:::-;1356:43;1383:4;1389:2;1393:5;-1:-1:-1;;;;;1356:43:0;;:::i;:::-;1090:317;;;:::o;991:91::-;1040:34;1046:14;1062:11;;1040:5;;;:34;;:::i;:::-;991:91::o;14:245:8:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:8;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:8:o;264:127::-;325:10;320:3;316:20;313:1;306:31;356:4;353:1;346:15;380:4;377:1;370:15;396:422;485:1;528:5;485:1;542:270;563:7;553:8;550:21;542:270;;;622:4;618:1;614:6;610:17;604:4;601:27;598:53;;;631:18;;:::i;:::-;681:7;671:8;667:22;664:55;;;701:16;;;;664:55;780:22;;;;740:15;;;;542:270;;;546:3;396:422;;;;;:::o;823:806::-;872:5;902:8;892:80;;-1:-1:-1;943:1:8;957:5;;892:80;991:4;981:76;;-1:-1:-1;1028:1:8;1042:5;;981:76;1073:4;1091:1;1086:59;;;;1159:1;1154:130;;;;1066:218;;1086:59;1116:1;1107:10;;1130:5;;;1154:130;1191:3;1181:8;1178:17;1175:43;;;1198:18;;:::i;:::-;-1:-1:-1;;1254:1:8;1240:16;;1269:5;;1066:218;;1368:2;1358:8;1355:16;1349:3;1343:4;1340:13;1336:36;1330:2;1320:8;1317:16;1312:2;1306:4;1303:12;1299:35;1296:77;1293:159;;;-1:-1:-1;1405:19:8;;;1437:5;;1293:159;1484:34;1509:8;1503:4;1484:34;:::i;:::-;1554:6;1550:1;1546:6;1542:19;1533:7;1530:32;1527:58;;;1565:18;;:::i;:::-;1603:20;;-1:-1:-1;823:806:8;;;;;:::o;1634:140::-;1692:5;1721:47;1762:4;1752:8;1748:19;1742:4;1721:47;:::i;:::-;1712:56;1634:140;-1:-1:-1;;;1634:140:8:o;1779:168::-;1852:9;;;1883;;1900:15;;;1894:22;;1880:37;1870:71;;1921:18;;:::i;1952:127::-;2013:10;2008:3;2004:20;2001:1;1994:31;2044:4;2041:1;2034:15;2068:4;2065:1;2058:15;2084:380;2163:1;2159:12;;;;2206;;;2227:61;;2281:4;2273:6;2269:17;2259:27;;2227:61;2334:2;2326:6;2323:14;2303:18;2300:38;2297:161;;2380:10;2375:3;2371:20;2368:1;2361:31;2415:4;2412:1;2405:15;2443:4;2440:1;2433:15;2297:161;;2084:380;;;:::o;2595:545::-;2697:2;2692:3;2689:11;2686:448;;;2733:1;2758:5;2754:2;2747:17;2803:4;2799:2;2789:19;2873:2;2861:10;2857:19;2854:1;2850:27;2844:4;2840:38;2909:4;2897:10;2894:20;2891:47;;;-1:-1:-1;2932:4:8;2891:47;2987:2;2982:3;2978:12;2975:1;2971:20;2965:4;2961:31;2951:41;;3042:82;3060:2;3053:5;3050:13;3042:82;;;3105:17;;;3086:1;3075:13;3042:82;;;3046:3;;;2595:545;;;:::o;3316:1352::-;3436:10;;-1:-1:-1;;;;;3458:30:8;;3455:56;;;3491:18;;:::i;:::-;3520:97;3610:6;3570:38;3602:4;3596:11;3570:38;:::i;:::-;3564:4;3520:97;:::i;:::-;3672:4;;3736:2;3725:14;;3753:1;3748:663;;;;4455:1;4472:6;4469:89;;;-1:-1:-1;4524:19:8;;;4518:26;4469:89;-1:-1:-1;;3273:1:8;3269:11;;;3265:24;3261:29;3251:40;3297:1;3293:11;;;3248:57;4571:81;;3718:944;;3748:663;2542:1;2535:14;;;2579:4;2566:18;;-1:-1:-1;;3784:20:8;;;3902:236;3916:7;3913:1;3910:14;3902:236;;;4005:19;;;3999:26;3984:42;;4097:27;;;;4065:1;4053:14;;;;3932:19;;3902:236;;;3906:3;4166:6;4157:7;4154:19;4151:201;;;4227:19;;;4221:26;-1:-1:-1;;4310:1:8;4306:14;;;4322:3;4302:24;4298:37;4294:42;4279:58;4264:74;;4151:201;-1:-1:-1;;;;;4398:1:8;4382:14;;;4378:22;4365:36;;-1:-1:-1;3316:1352:8:o;5023:125::-;5088:9;;;5109:10;;;5106:36;;;5122:18;;:::i;5867:177::-;354:1335:0;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "354:1335:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4444:197:1;1004:187:8;449:26:0;;;;;;;;;1342:25:8;;;1330:2;1315:18;449:26:0;1196:177:8;3255:106:1;3342:12;;3255:106;;1423:137:0;;;;;;:::i;:::-;;:::i;:::-;;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;2038:36:8;;2026:2;2011:18;3104:91:1;1896:184:8;635:81:4;705:4;635:81;;5854:234:1;;;;;;:::i;:::-;;:::i;578:89:3:-;;;;;;:::i;:::-;;:::i;3419:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;973:161:3;;;;;;:::i;:::-;;:::i;414:28:0:-;;;;;-1:-1:-1;;;;;414:28:0;;;;;;-1:-1:-1;;;;;2456:32:8;;;2438:51;;2426:2;2411:18;414:28:0;2276:219:8;2369:102:1;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:6;4581:32:1;719:10:6;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;1423:137:0:-;1620:5;;-1:-1:-1;;;;;1620:5:0;1606:10;:19;1598:66;;;;-1:-1:-1;;;1598:66:0;;3352:2:8;1598:66:0;;;3334:21:8;3391:2;3371:18;;;3364:30;3430:34;3410:18;;;3403:62;-1:-1:-1;;;3481:18:8;;;3474:31;3522:19;;1598:66:0;;;;;;;;;1521:16:::1;3186:2:1::0;1521::0::1;:16;:::i;:::-;1511:27;::::0;:6;:27:::1;:::i;:::-;1496:11;:42:::0;-1:-1:-1;1423:137:0:o;5203:256:1:-;5300:4;719:10:6;5356:38:1;5372:4;719:10:6;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:6;5996:64:1;719:10:6;6012:7:1;6049:10;6021:25;719:10:6;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;578:89:3:-;633:27;719:10:6;653:6:3;633:5;:27::i;:::-;578:89;:::o;973:161::-;1049:46;1065:7;719:10:6;1088:6:3;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:6;6668:4:1;6749:25;719:10:6;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;5572:2:8;6784:85:1;;;5554:21:8;5611:2;5591:18;;;5584:30;5650:34;5630:18;;;5623:62;-1:-1:-1;;;5701:18:8;;;5694:35;5746:19;;6784:85:1;5370:401:8;6784:85:1;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:6;3873:28:1;719:10:6;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;5978:2:8;10550:68:1;;;5960:21:8;6017:2;5997:18;;;5990:30;6056:34;6036:18;;;6029:62;-1:-1:-1;;;6107:18:8;;;6100:34;6151:19;;10550:68:1;5776:400:8;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;6383:2:8;10628:68:1;;;6365:21:8;6422:2;6402:18;;;6395:30;6461:34;6441:18;;;6434:62;-1:-1:-1;;;6512:18:8;;;6505:32;6554:19;;10628:68:1;6181:398:8;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:8;;;10758:32:1;;1315:18:8;10758:32:1;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;6786:2:8;11297:68:1;;;6768:21:8;6825:2;6805:18;;;6798:30;6864:31;6844:18;;;6837:59;6913:18;;11297:68:1;6584:353:8;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;7144:2:8;7544:68:1;;;7126:21:8;7183:2;7163:18;;;7156:30;7222:34;7202:18;;;7195:62;-1:-1:-1;;;7273:18:8;;;7266:35;7318:19;;7544:68:1;6942:401:8;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;7550:2:8;7622:64:1;;;7532:21:8;7589:2;7569:18;;;7562:30;7628:34;7608:18;;;7601:62;-1:-1:-1;;;7679:18:8;;;7672:33;7722:19;;7622:64:1;7348:399:8;7622:64:1;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;7954:2:8;7793:72:1;;;7936:21:8;7993:2;7973:18;;;7966:30;8032:34;8012:18;;;8005:62;-1:-1:-1;;;8083:18:8;;;8076:36;8129:19;;7793:72:1;7752:402:8;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:8;;;8114:13:1;;8163:26;;1315:18:8;8163:26:1;;;;;;;8200:37;9375:659;;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;8361:2:8;9450:67:1;;;8343:21:8;8400:2;8380:18;;;8373:30;8439:34;8419:18;;;8412:62;-1:-1:-1;;;8490:18:8;;;8483:31;8531:19;;9450:67:1;8159:397:8;9450:67:1;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;8763:2:8;9641:71:1;;;8745:21:8;8802:2;8782:18;;;8775:30;8841:34;8821:18;;;8814:62;-1:-1:-1;;;8892:18:8;;;8885:32;8934:19;;9641:71:1;8561:398:8;9641:71:1;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:8;;;9746:9:1;;:18;9931:37;;1315:18:8;9931:37:1;1196:177:8;1090:317:0;-1:-1:-1;;;;;1210:18:0;;;;;;:42;;-1:-1:-1;;;;;;1232:20:0;;1238:14;1232:20;;1210:42;:74;;;;-1:-1:-1;1256:14:0;:28;;1210:74;1206:136;;;1308:18;:16;:18::i;:::-;9440:594:1;9375:659;;:::o;991:91:0:-;1040:34;1046:14;1062:11;;1040:5;:34::i;:::-;991:91::o;754:227::-;705:4:4;889:6:0;867:19;3342:12:1;;;3255:106;867:19:0;:28;;;;:::i;:::-;:37;;859:75;;;;-1:-1:-1;;;859:75:0;;9166:2:8;859:75:0;;;9148:21:8;9205:2;9185:18;;;9178:30;-1:-1:-1;;;9224:18:8;;;9217:55;9289:18;;859:75:0;8964:349:8;859:75:0;945:28;957:7;966:6;705:4:4;883:6;861:19;3342:12:1;;;3255:106;861:19:4;:28;;;;:::i;:::-;:37;;853:75;;;;-1:-1:-1;;;853:75:4;;9166:2:8;853:75:4;;;9148:21:8;9205:2;9185:18;;;9178:30;-1:-1:-1;;;9224:18:8;;;9217:55;9289:18;;853:75:4;8964:349:8;853:75:4;938:28;950:7;959:6;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;9520:2:8;8595:65:1;;;9502:21:8;9559:2;9539:18;;;9532:30;9598:33;9578:18;;;9571:61;9649:18;;8595:65:1;9318:355:8;8595:65:1;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:8;;;8952:37:1;;1315:18:8;8952:37:1;;;;;;;973:161:3;;:::o;14:548:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:180::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;-1:-1:-1;1529:23:8;;1378:180;-1:-1:-1;1378:180:8:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:8:o;2500:260::-;2568:6;2576;2629:2;2617:9;2608:7;2604:23;2600:32;2597:52;;;2645:1;2642;2635:12;2597:52;2668:29;2687:9;2668:29;:::i;:::-;2658:39;;2716:38;2750:2;2739:9;2735:18;2716:38;:::i;:::-;2706:48;;2500:260;;;;;:::o;2765:380::-;2844:1;2840:12;;;;2887;;;2908:61;;2962:4;2954:6;2950:17;2940:27;;2908:61;3015:2;3007:6;3004:14;2984:18;2981:38;2978:161;;3061:10;3056:3;3052:20;3049:1;3042:31;3096:4;3093:1;3086:15;3124:4;3121:1;3114:15;2978:161;;2765:380;;;:::o;3552:127::-;3613:10;3608:3;3604:20;3601:1;3594:31;3644:4;3641:1;3634:15;3668:4;3665:1;3658:15;3684:422;3773:1;3816:5;3773:1;3830:270;3851:7;3841:8;3838:21;3830:270;;;3910:4;3906:1;3902:6;3898:17;3892:4;3889:27;3886:53;;;3919:18;;:::i;:::-;3969:7;3959:8;3955:22;3952:55;;;3989:16;;;;3952:55;4068:22;;;;4028:15;;;;3830:270;;;3834:3;3684:422;;;;;:::o;4111:806::-;4160:5;4190:8;4180:80;;-1:-1:-1;4231:1:8;4245:5;;4180:80;4279:4;4269:76;;-1:-1:-1;4316:1:8;4330:5;;4269:76;4361:4;4379:1;4374:59;;;;4447:1;4442:130;;;;4354:218;;4374:59;4404:1;4395:10;;4418:5;;;4442:130;4479:3;4469:8;4466:17;4463:43;;;4486:18;;:::i;:::-;-1:-1:-1;;4542:1:8;4528:16;;4557:5;;4354:218;;4656:2;4646:8;4643:16;4637:3;4631:4;4628:13;4624:36;4618:2;4608:8;4605:16;4600:2;4594:4;4591:12;4587:35;4584:77;4581:159;;;-1:-1:-1;4693:19:8;;;4725:5;;4581:159;4772:34;4797:8;4791:4;4772:34;:::i;:::-;4842:6;4838:1;4834:6;4830:19;4821:7;4818:32;4815:58;;;4853:18;;:::i;:::-;4891:20;;4111:806;-1:-1:-1;;;4111:806:8:o;4922:140::-;4980:5;5009:47;5050:4;5040:8;5036:19;5030:4;5009:47;:::i;5067:168::-;5140:9;;;5171;;5188:15;;;5182:22;;5168:37;5158:71;;5209:18;;:::i;5240:125::-;5305:9;;;5326:10;;;5323:36;;;5339:18;;:::i",
    "sourcePath": "c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/contracts/OceanToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/contracts/OceanToken.sol",
        "exportedSymbols": {
            "Context": [
                997
            ],
            "Counters": [
                1071
            ],
            "ERC20": [
                763
            ],
            "ERC20Burnable": [
                885
            ],
            "ERC20Capped": [
                950
            ],
            "IERC20": [
                841
            ],
            "IERC20Metadata": [
                975
            ],
            "OceanToken": [
                176
            ]
        },
        "id": 177,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".18"
                ],
                "nodeType": "PragmaDirective",
                "src": "64:24:0"
            },
            {
                "absolutePath": "c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "file": "../node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 177,
                "sourceUnit": 1072,
                "src": "92:68:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "file": "../node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 177,
                "sourceUnit": 886,
                "src": "162:90:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Aziz/Desktop/Last-heal/T_c20/ocean-token/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
                "file": "../node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 177,
                "sourceUnit": 951,
                "src": "254:88:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20Capped",
                            "nameLocations": [
                                "377:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 950,
                            "src": "377:11:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "377:11:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "ERC20Burnable",
                            "nameLocations": [
                                "391:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 885,
                            "src": "391:13:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "391:13:0"
                    }
                ],
                "canonicalName": "OceanToken",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 176,
                "linearizedBaseContracts": [
                    176,
                    885,
                    950,
                    763,
                    975,
                    841,
                    997
                ],
                "name": "OceanToken",
                "nameLocation": "363:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "8da5cb5b",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "437:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "414:28:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "414:15:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "0ac168a1",
                        "id": 12,
                        "mutability": "mutable",
                        "name": "blockReward",
                        "nameLocation": "464:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "449:26:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 11,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "449:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 61,
                            "nodeType": "Block",
                            "src": "589:155:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 32,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "600:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 35,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "616:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 36,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "620:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "616:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 34,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "608:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                                    "typeString": "type(address payable)"
                                                },
                                                "typeName": {
                                                    "id": 33,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "608:8:0",
                                                    "stateMutability": "payable",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 37,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "608:19:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "600:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "id": 39,
                                    "nodeType": "ExpressionStatement",
                                    "src": "600:27:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 41,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10,
                                                "src": "644:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 48,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "3730303030303030",
                                                    "id": 42,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "651:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_70000000_by_1",
                                                        "typeString": "int_const 70000000"
                                                    },
                                                    "value": "70000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 46,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "hexValue": "3130",
                                                                "id": 43,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "663:2:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10_by_1",
                                                                    "typeString": "int_const 10"
                                                                },
                                                                "value": "10"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 44,
                                                                    "name": "decimals",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 251,
                                                                    "src": "669:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                        "typeString": "function () view returns (uint8)"
                                                                    }
                                                                },
                                                                "id": 45,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "669:10:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "src": "663:16:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 47,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "662:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "651:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 40,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                92
                                            ],
                                            "referencedDeclaration": 92,
                                            "src": "638:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 49,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "638:43:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 50,
                                    "nodeType": "ExpressionStatement",
                                    "src": "638:43:0"
                                },
                                {
                                    "expression": {
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 51,
                                            "name": "blockReward",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "693:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 58,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 52,
                                                "name": "reward",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "707:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 56,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 53,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "718:2:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 54,
                                                                "name": "decimals",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 251,
                                                                "src": "724:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                    "typeString": "function () view returns (uint8)"
                                                                }
                                                            },
                                                            "id": 55,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "724:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "src": "718:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "id": 57,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "717:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "707:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "693:42:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "693:42:0"
                                }
                            ]
                        },
                        "id": 62,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4f6365616e546f6b65",
                                        "id": 19,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "533:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_7defcb0abfcadfccd6e603826f720aabd263902fcb135a7e8c986eec4a929764",
                                            "typeString": "literal_string \"OceanToke\""
                                        },
                                        "value": "OceanToke"
                                    },
                                    {
                                        "hexValue": "4f43",
                                        "id": 20,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "545:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_8f477fa23f3d78bc84ea7748ae3ac22fd7700d0e09fccb8bb184469460a356fb",
                                            "typeString": "literal_string \"OC\""
                                        },
                                        "value": "OC"
                                    }
                                ],
                                "id": 21,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 18,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "527:5:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 763,
                                    "src": "527:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "527:23:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 29,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 23,
                                            "name": "cap",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14,
                                            "src": "564:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "components": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 27,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 24,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "571:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 25,
                                                            "name": "decimals",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 251,
                                                            "src": "577:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                "typeString": "function () view returns (uint8)"
                                                            }
                                                        },
                                                        "id": 26,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "577:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "571:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "id": 28,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "570:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "564:24:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 30,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 22,
                                    "name": "ERC20Capped",
                                    "nameLocations": [
                                        "552:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 950,
                                    "src": "552:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "552:37:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 14,
                                    "mutability": "mutable",
                                    "name": "cap",
                                    "nameLocation": "505:3:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "497:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "497:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 16,
                                    "mutability": "mutable",
                                    "name": "reward",
                                    "nameLocation": "519:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "510:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 15,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "510:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "496:30:0"
                        },
                        "returnParameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "589:0:0"
                        },
                        "scope": 176,
                        "src": "485:259:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            580,
                            949
                        ],
                        "body": {
                            "id": 91,
                            "nodeType": "Block",
                            "src": "848:133:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 77,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 73,
                                                                "name": "ERC20",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 763,
                                                                "src": "867:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$763_$",
                                                                    "typeString": "type(contract ERC20)"
                                                                }
                                                            },
                                                            "id": 74,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "873:11:0",
                                                            "memberName": "totalSupply",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 261,
                                                            "src": "867:17:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 75,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "867:19:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 76,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 66,
                                                        "src": "889:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "867:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 78,
                                                        "name": "cap",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 920,
                                                        "src": "899:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                            "typeString": "function () view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 79,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "899:5:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "867:37:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "45524332304361707065643a20636170206578636565646564",
                                                "id": 81,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "906:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
                                                    "typeString": "literal_string \"ERC20Capped: cap exceeded\""
                                                },
                                                "value": "ERC20Capped: cap exceeded"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
                                                    "typeString": "literal_string \"ERC20Capped: cap exceeded\""
                                                }
                                            ],
                                            "id": 72,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "859:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "859:75:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 83,
                                    "nodeType": "ExpressionStatement",
                                    "src": "859:75:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 87,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 64,
                                                "src": "957:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 88,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 66,
                                                "src": "966:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 84,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "945:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_OceanToken_$176_$",
                                                    "typeString": "type(contract super OceanToken)"
                                                }
                                            },
                                            "id": 86,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "951:5:0",
                                            "memberName": "_mint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 949,
                                            "src": "945:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 89,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "945:28:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 90,
                                    "nodeType": "ExpressionStatement",
                                    "src": "945:28:0"
                                }
                            ]
                        },
                        "id": 92,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_mint",
                        "nameLocation": "763:5:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 70,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 68,
                                    "name": "ERC20Capped",
                                    "nameLocations": [
                                        "828:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 950,
                                    "src": "828:11:0"
                                },
                                {
                                    "id": 69,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "841:5:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 763,
                                    "src": "841:5:0"
                                }
                            ],
                            "src": "819:28:0"
                        },
                        "parameters": {
                            "id": 67,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 64,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nameLocation": "777:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 92,
                                    "src": "769:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 63,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "769:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 66,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "794:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 92,
                                    "src": "786:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 65,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "786:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "768:33:0"
                        },
                        "returnParameters": {
                            "id": 71,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "848:0:0"
                        },
                        "scope": 176,
                        "src": "754:227:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 101,
                            "nodeType": "Block",
                            "src": "1029:53:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 96,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967292,
                                                    "src": "1046:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                    }
                                                },
                                                "id": 97,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1052:8:0",
                                                "memberName": "coinbase",
                                                "nodeType": "MemberAccess",
                                                "src": "1046:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "id": 98,
                                                "name": "blockReward",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12,
                                                "src": "1062:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 95,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                92
                                            ],
                                            "referencedDeclaration": 92,
                                            "src": "1040:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 99,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1040:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 100,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1040:34:0"
                                }
                            ]
                        },
                        "id": 102,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_mintMinerReward",
                        "nameLocation": "1000:16:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 93,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1016:2:0"
                        },
                        "returnParameters": {
                            "id": 94,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1029:0:0"
                        },
                        "scope": 176,
                        "src": "991:91:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            751
                        ],
                        "body": {
                            "id": 144,
                            "nodeType": "Block",
                            "src": "1185:222:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 130,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "id": 122,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 117,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 112,
                                                    "name": "from",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 104,
                                                    "src": "1210:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 115,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1226:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 114,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1218:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 113,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1218:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 116,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1218:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1210:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "&&",
                                            "rightExpression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 121,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 118,
                                                    "name": "to",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 106,
                                                    "src": "1232:2:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 119,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967292,
                                                        "src": "1238:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 120,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1244:8:0",
                                                    "memberName": "coinbase",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1238:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1232:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "src": "1210:42:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "id": 129,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "expression": {
                                                    "id": 123,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967292,
                                                    "src": "1256:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                    }
                                                },
                                                "id": 124,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1262:8:0",
                                                "memberName": "coinbase",
                                                "nodeType": "MemberAccess",
                                                "src": "1256:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "!=",
                                            "rightExpression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "30",
                                                        "id": 127,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1282:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 126,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1274:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 125,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1274:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 128,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1274:10:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "src": "1256:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "1210:74:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 135,
                                    "nodeType": "IfStatement",
                                    "src": "1206:136:0",
                                    "trueBody": {
                                        "id": 134,
                                        "nodeType": "Block",
                                        "src": "1285:57:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 131,
                                                        "name": "_mintMinerReward",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 102,
                                                        "src": "1308:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 132,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1308:18:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 133,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1308:18:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 139,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 104,
                                                "src": "1383:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 140,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 106,
                                                "src": "1389:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 141,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 108,
                                                "src": "1393:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 136,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "1356:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_OceanToken_$176_$",
                                                    "typeString": "type(contract super OceanToken)"
                                                }
                                            },
                                            "id": 138,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1362:20:0",
                                            "memberName": "_beforeTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 751,
                                            "src": "1356:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1356:43:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 143,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1356:43:0"
                                }
                            ]
                        },
                        "id": 145,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_beforeTokenTransfer",
                        "nameLocation": "1099:20:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 110,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1176:8:0"
                        },
                        "parameters": {
                            "id": 109,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 104,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "1128:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "1120:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 103,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1120:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 106,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1141:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "1133:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 105,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1133:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 108,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1152:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "1144:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 107,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1144:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1119:39:0"
                        },
                        "returnParameters": {
                            "id": 111,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1185:0:0"
                        },
                        "scope": 176,
                        "src": "1090:317:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 162,
                            "nodeType": "Block",
                            "src": "1481:79:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 152,
                                            "name": "blockReward",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "1496:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 159,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 153,
                                                "name": "reward",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 147,
                                                "src": "1511:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 157,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 154,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1521:2:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 155,
                                                                "name": "decimals",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 251,
                                                                "src": "1527:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                    "typeString": "function () view returns (uint8)"
                                                                }
                                                            },
                                                            "id": 156,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1527:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "src": "1521:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "id": 158,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "1520:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "1511:27:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1496:42:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 161,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1496:42:0"
                                }
                            ]
                        },
                        "functionSelector": "1a18e707",
                        "id": 163,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 150,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 149,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1471:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 175,
                                    "src": "1471:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1471:9:0"
                            }
                        ],
                        "name": "setBlockReward",
                        "nameLocation": "1432:14:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 148,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 147,
                                    "mutability": "mutable",
                                    "name": "reward",
                                    "nameLocation": "1456:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 163,
                                    "src": "1448:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 146,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1448:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1447:16:0"
                        },
                        "returnParameters": {
                            "id": 151,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1481:0:0"
                        },
                        "scope": 176,
                        "src": "1423:137:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 174,
                            "nodeType": "Block",
                            "src": "1587:97:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 169,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 166,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1606:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 167,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1610:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1606:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 168,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "1620:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1606:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
                                                "id": 170,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1628:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
                                                    "typeString": "literal_string \"only owner can call this function\""
                                                },
                                                "value": "only owner can call this function"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
                                                    "typeString": "literal_string \"only owner can call this function\""
                                                }
                                            ],
                                            "id": 165,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1598:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1598:66:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 172,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1598:66:0"
                                },
                                {
                                    "id": 173,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "1675:1:0"
                                }
                            ]
                        },
                        "id": 175,
                        "name": "onlyOwner",
                        "nameLocation": "1577:9:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 164,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1587:0:0"
                        },
                        "src": "1568:116:0",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 177,
                "src": "354:1335:0",
                "usedErrors": []
            }
        ],
        "src": "64:1625:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "blockReward()": "0ac168a1",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "cap()": "355274ea",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "setBlockReward(uint256)": "1a18e707",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "742200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24652",
            "balanceOf(address)": "2607",
            "blockReward()": "2363",
            "burn(uint256)": "infinite",
            "burnFrom(address,uint256)": "infinite",
            "cap()": "infinite",
            "decimals()": "244",
            "decreaseAllowance(address,uint256)": "27017",
            "increaseAllowance(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2359",
            "setBlockReward(uint256)": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2382",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        },
        "internal": {
            "_beforeTokenTransfer(address,address,uint256)": "infinite",
            "_mint(address,uint256)": "infinite",
            "_mintMinerReward()": "infinite"
        }
    }
}